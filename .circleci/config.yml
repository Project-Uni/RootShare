version: 2.1
orbs:
  node: circleci/node@3.0.0
  aws-s3: circleci/aws-s3@2.0.0
  aws-code-deploy: circleci/aws-code-deploy@1.0.1

jobs:
  build:
    docker:
      - image: node:14.4.0
    # resource_class: large ## Or xlarge
    resource_class: small

    working_directory: ~/repo

    steps:
      # - checkout

      # - restore_cache:
      #     keys:
      #       - frontend-deps-{{ checksum "client/frontend/package.json" }}
      #       - frontend-deps-

      # ## run: npm test

      # - run: cd client/frontend && npm install

      # - save_cache:
      #     paths:
      #       - client/frontend/node_modules
      #     key: frontend-deps-{{ checksum "client/frontend/package.json" }}

      # - run: cd client/frontend && CI=false npm run build

      # - run:
      #     name: Compress Artifacts
      #     command: tar --exclude './client/node_modules' --exclude './client/frontend/node_modules' -cvzf client-latest.tar client/

      # - store_artifacts:
      #     path: client-latest.tar
      #     destination: artifacts/client-latest.tar ##Todo - Automate package version update and use that as the tag here

      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - .

      - run: mkdir artifacts && echo "Test artifact" > artifacts/test.txt

      - aws-s3/copy:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: artifacts/test.txt
          to: s3://rootshare-clients-artifacts

      # - aws-s3/sync:
      #     # arguments: |
      #     #   --acl public-read \
      #     #   --cache-control "max-age=86400"
      #     aws-access-key-id: AWS_ACCESS_KEY_ID
      #     aws-region: AWS_REGION
      #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      #     from: client-latest.tar
      #     to: s3://rootshare-client-artifacts

      # - aws-s3/copy:
      #     from: client-latest.tar
      #     to: s3://rootshare-client-artifacts

      ## run: aws deploy

workflows:
  build-react:
    jobs:
      - build:
          filters:
            branches:
              only: circleci-project-setup
